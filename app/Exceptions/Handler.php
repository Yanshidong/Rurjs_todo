<?php

namespace App\Exceptions;

use App\Helper\RedCode;
use App\Helper\RedResponse;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        //
    }

    public function render($request, Throwable $e)
    {
//        if(config('app.debug')) return parent::render($request, $e); // TODO: Change the autogenerated stub
        return response()->json($this->handle($request,$e));
    }

    public function handle($request, Throwable $e): RedResponse{
        if($e instanceof RedAPIException){
            return RedResponse::failed($e->getCode(),$e->getMessage());
        }
        return RedResponse::failed(RedCode::F_SRV_ERROR,$e->getMessage());
    }


}
